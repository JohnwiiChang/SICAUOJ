<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Account" xml:space="preserve">
    <value>Account</value>
  </data>
  <data name="AccountManager" xml:space="preserve">
    <value>Account Manager</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddQuestions" xml:space="preserve">
    <value>Add Questions</value>
  </data>
  <data name="AnswerQuestion" xml:space="preserve">
    <value>Answer Question</value>
  </data>
  <data name="Attention" xml:space="preserve">
    <value>Attention</value>
  </data>
  <data name="BasicInfo" xml:space="preserve">
    <value>Basic Information</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="ConfirmCode" xml:space="preserve">
    <value>Comfirm Code</value>
  </data>
  <data name="CompetitionList" xml:space="preserve">
    <value>Competition List</value>
  </data>
  <data name="CompetitionSystem" xml:space="preserve">
    <value>Competition System</value>
  </data>
  <data name="Compiler" xml:space="preserve">
    <value>Compiler</value>
  </data>
  <data name="CompilerArguments" xml:space="preserve">
    <value>Compiler Arguments</value>
  </data>
  <data name="CompilerConnection" xml:space="preserve">
    <value>Compiler Connection</value>
  </data>
  <data name="CompilerPath" xml:space="preserve">
    <value>Compiler Path</value>
  </data>
  <data name="CompilerSetting" xml:space="preserve">
    <value>Compiler Setting</value>
  </data>
  <data name="CompileTime" xml:space="preserve">
    <value>Compile Time</value>
  </data>
  <data name="CompileTimeNotGreaterThan" xml:space="preserve">
    <value>Compile time can not greater than</value>
  </data>
  <data name="Conclusion" xml:space="preserve">
    <value>Conclusion</value>
  </data>
  <data name="ConfirmPassword" xml:space="preserve">
    <value>Confirm Password</value>
  </data>
  <data name="Dashboard" xml:space="preserve">
    <value>Dashboard</value>
  </data>
  <data name="DefaultLanguage" xml:space="preserve">
    <value>Default Language</value>
  </data>
  <data name="Detail" xml:space="preserve">
    <value>Detail</value>
  </data>
  <data name="Disable" xml:space="preserve">
    <value>Disable</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EmailAddress" xml:space="preserve">
    <value>Email address here.</value>
  </data>
  <data name="EndTime" xml:space="preserve">
    <value>End Time</value>
  </data>
  <data name="FindPassword" xml:space="preserve">
    <value>Find Password</value>
  </data>
  <data name="GreaterThan" xml:space="preserve">
    <value>Greater than </value>
  </data>
  <data name="Group" xml:space="preserve">
    <value>Group</value>
  </data>
  <data name="InfoCard" xml:space="preserve">
    <value>Information Card</value>
  </data>
  <data name="InFormat" xml:space="preserve">
    <value>Code Format</value>
  </data>
  <data name="JavaAttention" xml:space="preserve">
    <value>Java users should name the class with </value>
  </data>
  <data name="LanguageSupport" xml:space="preserve">
    <value>Language Support</value>
  </data>
  <data name="Libraries" xml:space="preserve">
    <value>Libraries</value>
  </data>
  <data name="Login" xml:space="preserve">
    <value>Login</value>
  </data>
  <data name="LoginWithSpace" xml:space="preserve">
    <value>Login </value>
  </data>
  <data name="LogOff" xml:space="preserve">
    <value>Log Off</value>
  </data>
  <data name="LostStatus" xml:space="preserve">
    <value>Lost Status</value>
  </data>
  <data name="LowerThan15" xml:space="preserve">
    <value>Lower than 15.6001</value>
  </data>
  <data name="ManageLibraries" xml:space="preserve">
    <value>Manage Libraries</value>
  </data>
  <data name="MaxTask" xml:space="preserve">
    <value>MaxTask</value>
  </data>
  <data name="Memory" xml:space="preserve">
    <value>Memory</value>
  </data>
  <data name="MemoryLimitations" xml:space="preserve">
    <value>Memory usage can not greater than</value>
  </data>
  <data name="MyAccount" xml:space="preserve">
    <value>My Account</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NewPassword" xml:space="preserve">
    <value>New Password</value>
  </data>
  <data name="OldPassword" xml:space="preserve">
    <value>Old Password</value>
  </data>
  <data name="OnlineNode" xml:space="preserve">
    <value>Online Node</value>
  </data>
  <data name="OnlyAvaliableWhenAdd" xml:space="preserve">
    <value>You just can edit it when add user.</value>
  </data>
  <data name="Operation" xml:space="preserve">
    <value>Operation</value>
  </data>
  <data name="OutFormat" xml:space="preserve">
    <value>Execution Format</value>
  </data>
  <data name="Passed" xml:space="preserve">
    <value>Passed</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>Password</value>
  </data>
  <data name="PleaseEnterIDAndSeparateBySharp" xml:space="preserve">
    <value>Please enter ID and separate it by '#'.</value>
  </data>
  <data name="Preferences" xml:space="preserve">
    <value>Preferences</value>
  </data>
  <data name="Question" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="QuestionCenter" xml:space="preserve">
    <value>Question Center</value>
  </data>
  <data name="Questions" xml:space="preserve">
    <value>Questions</value>
  </data>
  <data name="QuestionsInThisCollection" xml:space="preserve">
    <value>Questions in this collection</value>
  </data>
  <data name="QuickNavigation" xml:space="preserve">
    <value>Quick Navigation</value>
  </data>
  <data name="Register" xml:space="preserve">
    <value>Register</value>
  </data>
  <data name="RegisterEmail" xml:space="preserve">
    <value>Register Email</value>
  </data>
  <data name="RegisterEmailStr" xml:space="preserve">
    <value>Register email address.</value>
  </data>
  <data name="RegisterWithSpace" xml:space="preserve">
    <value>Register </value>
  </data>
  <data name="ReJudge" xml:space="preserve">
    <value>ReJudge</value>
  </data>
  <data name="RenewPassword" xml:space="preserve">
    <value>Renew Password</value>
  </data>
  <data name="Reply" xml:space="preserve">
    <value>Reply</value>
  </data>
  <data name="RequestRegister" xml:space="preserve">
    <value>Request Register</value>
  </data>
  <data name="RequestReset" xml:space="preserve">
    <value>Request Reset</value>
  </data>
  <data name="Requirement" xml:space="preserve">
    <value>Requirement</value>
  </data>
  <data name="ReTypeYourPassword" xml:space="preserve">
    <value>Confirm your password.</value>
  </data>
  <data name="RunnerArguments" xml:space="preserve">
    <value>RunnerArguments</value>
  </data>
  <data name="RunnerConnection" xml:space="preserve">
    <value>Runner Connection</value>
  </data>
  <data name="RunnerPath" xml:space="preserve">
    <value>Runner Path</value>
  </data>
  <data name="RunTime" xml:space="preserve">
    <value>Run Time</value>
  </data>
  <data name="RunTimeNotGreaterThan" xml:space="preserve">
    <value>Run time can not greater than</value>
  </data>
  <data name="Script" xml:space="preserve">
    <value>Script</value>
  </data>
  <data name="SICAUIEC" xml:space="preserve">
    <value>College of Information Engineering, Sichuan Agricultural University</value>
  </data>
  <data name="SICAUOJ" xml:space="preserve">
    <value>Sichuan Agricultural University Online Judge</value>
  </data>
  <data name="StartTime" xml:space="preserve">
    <value>Start Time</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="SystemTools" xml:space="preserve">
    <value>System Tools</value>
  </data>
  <data name="TaskDetail" xml:space="preserve">
    <value>Task Detail</value>
  </data>
  <data name="TaskList" xml:space="preserve">
    <value>Task List</value>
  </data>
  <data name="Tasks" xml:space="preserve">
    <value>Tasks</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="TypeCompilerArgs" xml:space="preserve">
    <value>Type compiler arguments here.</value>
  </data>
  <data name="TypeCompilerName" xml:space="preserve">
    <value>Type compiler name here.</value>
  </data>
  <data name="TypeCompilerPath" xml:space="preserve">
    <value>Type compiler path here.</value>
  </data>
  <data name="TypeNewPassword" xml:space="preserve">
    <value>Type new password here.</value>
  </data>
  <data name="TypeOldPassword" xml:space="preserve">
    <value>Type old password to comfirm.</value>
  </data>
  <data name="TypeRunnerArgs" xml:space="preserve">
    <value>Type runner arguments here.</value>
  </data>
  <data name="TypeRunnerPath" xml:space="preserve">
    <value>Type runner path here.</value>
  </data>
  <data name="TypeYourCodesHere" xml:space="preserve">
    <value>Type your codes here.</value>
  </data>
  <data name="TypeYourPassword" xml:space="preserve">
    <value>Type your password here.</value>
  </data>
  <data name="TypeYourUserName" xml:space="preserve">
    <value>Type your user name here.</value>
  </data>
  <data name="User" xml:space="preserve">
    <value>User</value>
  </data>
  <data name="UserName" xml:space="preserve">
    <value>User Name</value>
  </data>
  <data name="WorkDir" xml:space="preserve">
    <value>Work Directory</value>
  </data>
  <data name="Contained" xml:space="preserve">
    <value>Contained</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="EditCompetition" xml:space="preserve">
    <value>Edit Competition</value>
  </data>
  <data name="EditGroup" xml:space="preserve">
    <value>Edit Group</value>
  </data>
  <data name="Enable" xml:space="preserve">
    <value>Enable</value>
  </data>
  <data name="Environment" xml:space="preserve">
    <value>Environment</value>
  </data>
  <data name="GroupName" xml:space="preserve">
    <value>Group Name</value>
  </data>
  <data name="IdofTask" xml:space="preserve">
    <value>Task id.</value>
  </data>
  <data name="IsAdmin" xml:space="preserve">
    <value>This group is administrator group.</value>
  </data>
  <data name="MaxTaskStr" xml:space="preserve">
    <value>This setting will effect compiler node and runner node. So, the total number is double number of setting.</value>
  </data>
  <data name="Member" xml:space="preserve">
    <value>Member</value>
  </data>
  <data name="MemberSum" xml:space="preserve">
    <value>Members</value>
  </data>
  <data name="Mistake" xml:space="preserve">
    <value>Mistake</value>
  </data>
  <data name="MoreInfoContactUs" xml:space="preserve">
    <value>If you want to get more information, you can contact us with folow string:</value>
  </data>
  <data name="Node" xml:space="preserve">
    <value>Node</value>
  </data>
  <data name="NodeSetting" xml:space="preserve">
    <value>Node Setting</value>
  </data>
  <data name="QuestionDetail" xml:space="preserve">
    <value>Question Detail</value>
  </data>
  <data name="Rank" xml:space="preserve">
    <value>Rank</value>
  </data>
  <data name="RankQA" xml:space="preserve">
    <value>You need rank the final list using other software (such as Excel).</value>
  </data>
  <data name="ServerRefusedYourRequest" xml:space="preserve">
    <value>Server refused your request.</value>
  </data>
  <data name="Solved" xml:space="preserve">
    <value>Solved</value>
  </data>
  <data name="Support32Only" xml:space="preserve">
    <value>Only 32 Support</value>
  </data>
  <data name="Support64" xml:space="preserve">
    <value>64 Support</value>
  </data>
  <data name="TakePartIn" xml:space="preserve">
    <value>Participation</value>
  </data>
  <data name="ThisIsNotErr" xml:space="preserve">
    <value>This is not an error.</value>
  </data>
  <data name="TimeQA" xml:space="preserve">
    <value>The system does not count data earlier than the start time or later than the end time.</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TypeGroupName" xml:space="preserve">
    <value>Type group name here.</value>
  </data>
  <data name="TypeId" xml:space="preserve">
    <value>Type Id here.</value>
  </data>
  <data name="TypeMaxTask" xml:space="preserve">
    <value>Type the number of parallel tasks.</value>
  </data>
  <data name="TypeTitle" xml:space="preserve">
    <value>Type title here.</value>
  </data>
  <data name="TypeWorkDir" xml:space="preserve">
    <value>Type node work directory.</value>
  </data>
  <data name="ValidPermission" xml:space="preserve">
    <value>Insufficient permissions.</value>
  </data>
  <data name="ValidPermissionDetail" xml:space="preserve">
    <value>You should ask system administrator for more information.</value>
  </data>
  <data name="WeRSorry" xml:space="preserve">
    <value>We also feel sorry.</value>
  </data>
  <data name="Wildcard" xml:space="preserve">
    <value>Wildcard</value>
  </data>
  <data name="WorkDirStr" xml:space="preserve">
    <value>Work directory.</value>
  </data>
  <data name="WelcomeToSICAULogin" xml:space="preserve">
    <value>Welcome to Login Sichuan Agricultural University Online Judge</value>
  </data>
  <data name="WelcomeToSICAUReg" xml:space="preserve">
    <value>Welcome to Register Sichuan Agricultural University Online Judge</value>
  </data>
  <data name="WelcomeToSICAUse" xml:space="preserve">
    <value>Welcome to Use Sichuan Agricultural University Online Judge</value>
  </data>
  <data name="AccountFrozen" xml:space="preserve">
    <value>Your information might be wrong or this account might be frozen.</value>
  </data>
  <data name="Accuracy" xml:space="preserve">
    <value>Accuracy</value>
  </data>
  <data name="AddCompetition" xml:space="preserve">
    <value>Add Competition</value>
  </data>
  <data name="AddCompiler" xml:space="preserve">
    <value>Add Compiler</value>
  </data>
  <data name="AddGroup" xml:space="preserve">
    <value>Add Group</value>
  </data>
  <data name="AddLib" xml:space="preserve">
    <value>Add Library</value>
  </data>
  <data name="AddQuestion" xml:space="preserve">
    <value>Add Question</value>
  </data>
  <data name="AddUser" xml:space="preserve">
    <value>Add User</value>
  </data>
  <data name="BeSerious" xml:space="preserve">
    <value>Please be serious!</value>
  </data>
  <data name="ContentError" xml:space="preserve">
    <value>Content Error!</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done.</value>
  </data>
  <data name="EditLib" xml:space="preserve">
    <value>Edit Library</value>
  </data>
  <data name="EditQuestion" xml:space="preserve">
    <value>Edit Question</value>
  </data>
  <data name="EmailTaken" xml:space="preserve">
    <value>This email has been registered. Choose a new one.</value>
  </data>
  <data name="GroupQA" xml:space="preserve">
    <value>An user can have many groups.</value>
  </data>
  <data name="InformationNotMatch" xml:space="preserve">
    <value>Your information does not match.</value>
  </data>
  <data name="Input" xml:space="preserve">
    <value>Input</value>
  </data>
  <data name="LibDescription" xml:space="preserve">
    <value>Library Description</value>
  </data>
  <data name="LibGroupQA" xml:space="preserve">
    <value>If you checked this checkbox, some groups might can not access this library.</value>
  </data>
  <data name="LibName" xml:space="preserve">
    <value>Library Name</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="NotFund" xml:space="preserve">
    <value>Can not find your request resources.</value>
  </data>
  <data name="OJAttribute" xml:space="preserve">
    <value>OJ Attributes</value>
  </data>
  <data name="OJA_Code" xml:space="preserve">
    <value>Code area, using this attribute to make code more clear.</value>
  </data>
  <data name="OJA_Image" xml:space="preserve">
    <value>Insert an image to description.</value>
  </data>
  <data name="OJA_Math" xml:space="preserve">
    <value>Use Javascript lib to render LATEX formula.</value>
  </data>
  <data name="OJA_Separator" xml:space="preserve">
    <value>This separator will accept by TaskSet and send to runner node.</value>
  </data>
  <data name="OJA_SeparatorDescription" xml:space="preserve">
    <value>You need use add a return before this attribute and a return after attribute. Finally like: </value>
  </data>
  <data name="OJA_Title" xml:space="preserve">
    <value>Show as title.</value>
  </data>
  <data name="Output" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>Your password is too short.</value>
  </data>
  <data name="RegTime" xml:space="preserve">
    <value>Register Time</value>
  </data>
  <data name="ReJudgeRefused" xml:space="preserve">
    <value>Your request was refused by server, because </value>
  </data>
  <data name="Request" xml:space="preserve">
    <value>Request</value>
  </data>
  <data name="RequestRefused" xml:space="preserve">
    <value>Your request was refused by server.</value>
  </data>
  <data name="RequestTooMuch" xml:space="preserve">
    <value>Your requests are too much in our queue, please try it later.</value>
  </data>
  <data name="Result" xml:space="preserve">
    <value>Result</value>
  </data>
  <data name="Status" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="Summary" xml:space="preserve">
    <value>Summary</value>
  </data>
  <data name="Times" xml:space="preserve">
    <value>Times</value>
  </data>
  <data name="TypeDescription" xml:space="preserve">
    <value>Type description here.</value>
  </data>
  <data name="TypeInput" xml:space="preserve">
    <value>Type your input content, and separate them with wildcard.</value>
  </data>
  <data name="TypeLimitation" xml:space="preserve">
    <value>Type limitation here, the unit is byte.</value>
  </data>
  <data name="TypeName" xml:space="preserve">
    <value>Type name here.</value>
  </data>
  <data name="TypeOutput" xml:space="preserve">
    <value>Type your output content, and separate them with wildcard.</value>
  </data>
  <data name="TypeQuestion" xml:space="preserve">
    <value>Type question content here.</value>
  </data>
  <data name="TypeTime" xml:space="preserve">
    <value>Type time here, unit is ms.</value>
  </data>
  <data name="TypeTimeSpan" xml:space="preserve">
    <value>Format: year-month-day hour:min:second</value>
  </data>
  <data name="WrongPassword" xml:space="preserve">
    <value>Wrong password, system will logoff now.</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="Accept" xml:space="preserve">
    <value>Accept</value>
  </data>
  <data name="Compiled" xml:space="preserve">
    <value>Compiled</value>
  </data>
  <data name="CompileError" xml:space="preserve">
    <value>Compile Error</value>
  </data>
  <data name="CompilerAccept" xml:space="preserve">
    <value>Compiling</value>
  </data>
  <data name="FormatError" xml:space="preserve">
    <value>Presentation Error</value>
  </data>
  <data name="InQueue" xml:space="preserve">
    <value>In Queue</value>
  </data>
  <data name="OutOfMemory" xml:space="preserve">
    <value>Memory Limit Exceeded</value>
  </data>
  <data name="OutOfTimeLimitation" xml:space="preserve">
    <value>Time Limit Exceeded</value>
  </data>
  <data name="RunnerAccept" xml:space="preserve">
    <value>Running</value>
  </data>
  <data name="RuntimeError" xml:space="preserve">
    <value>Runtime Error</value>
  </data>
  <data name="SystemError" xml:space="preserve">
    <value>System Error</value>
  </data>
  <data name="WrongAnswer" xml:space="preserve">
    <value>Wrong Answer</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="AboutP1" xml:space="preserve">
    <value>Lots of programing languages can be hosted by this online judge system, you can add C, C++ or Java for standard ACM environment, and you can also add Ruby, Lua to give more choices to users. If you find there is something wrong with compilers support, you can ask SICAU OJ for dealing.</value>
  </data>
  <data name="AboutP2" xml:space="preserve">
    <value>The code submitted by users will be compiled by compiler nodes and judged by runner node at the same server. You can visit task list to check all your solutions' status, you can click the detail link to get code, compile time and etc. Administrators can see the reply by node, so you might get help from them.</value>
  </data>
  <data name="Globalization" xml:space="preserve">
    <value>Globalization</value>
  </data>
  <data name="GlobalizationIntroduction" xml:space="preserve">
    <value>This language pack is powered by SICAU OJ creator, and you can also join in us to make SICAU OJ can be understood by everyone in our little planet.</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>SICAU OJ is an open source online judge system created by Johnwii.Chang. At first, SICAU OJ just makes for the first SICAU algorithm competition.</value>
  </data>
  <data name="InformationNotComplete" xml:space="preserve">
    <value>Please provide complete information.</value>
  </data>
  <data name="JoinStr" xml:space="preserve">
    <value>As previously stated, SICAU OJ is an open source software, you can visit www.sicauoj.com to look for more information. You can download latest installation package to renew your software. You can also visit our GitHub page to submit your issues and requests, download source code modified by your self you just to explorer what’s new in our SICAU OJ vNext or join us to make it better.</value>
  </data>
  <data name="JoinUs" xml:space="preserve">
    <value>Join us!</value>
  </data>
  <data name="LanguagePack" xml:space="preserve">
    <value>English Language Pack</value>
  </data>
  <data name="LanguagePackMaker" xml:space="preserve">
    <value>Click here to visit globalization plan.</value>
  </data>
  <data name="LanguagePackMakerURL" xml:space="preserve">
    <value>http://prpr.pro/?go=195ea</value>
  </data>
  <data name="SaveUserNoConfirm" xml:space="preserve">
    <value>If you add account here, no confirm mail will be sent.</value>
  </data>
  <data name="SaveUserTypePassword" xml:space="preserve">
    <value>You need input your password into old password field to ensure the operator is yourself whatever you want to renew your password or not.</value>
  </data>
  <data name="Heartbeat" xml:space="preserve">
    <value>Heartbeat Packet</value>
  </data>
  <data name="TypeHeartbeat" xml:space="preserve">
    <value>Type heartbeat packet here, unit is ms.</value>
  </data>
</root>